#Trabalho 1 - Questão 2, letra b
using JuMP
using GLPKMathProgInterface
#workspace()
c1 = 100
c2 = 150
c3 = 200
delta = 5000

despacho = Model(solver = GLPKSolverLP())
@variable(despacho, 0 <= g1 <= 5)
@variable(despacho, 0 <= g2 <= 20)
@variable(despacho, 0 <= g3 <= 12)
@variable(despacho, -20 <= f12 <= 20)
@variable(despacho, -20 <= f13 <= 20)
@variable(despacho, -5 <= f23 <= 5)
@variable(despacho, d >= 0)

#Variáveis de contingência:
#Cenário 1
@variable(despacho, -20 <= f13_1 <= 20)
@variable(despacho, -5 <= f23_1 <= 5)
@constraint(despacho, g1 - f13_1 >= 0)
@constraint(despacho, g2 - f23_1 >= 0)
@constraint(despacho, g3 + f13_1 + f23_1 >= 15 - d)

#Cenário 2
@variable(despacho, -20 <= f12_2 <= 20)
@variable(despacho, -20 <= f13_2 <= 20)
@constraint(despacho, g1 - f12_2 - f13_2 >= 0)
@constraint(despacho, g2 + f12_2 >= 0)
@constraint(despacho, g3 + f13_2 >= 15 - d)

#Cenário 3
@variable(despacho, -20 <= f12_3 <= 20)
@variable(despacho, -5 <= f23_3 <= 5)
@constraint(despacho, g1 - f12_3 >= 0)
@constraint(despacho, g2 + f12_3 - f23_3 >= 0)
@constraint(despacho, g3 + f23_3 >= 15 - d)


@objective(despacho, Min, c1*g1 + c2*g2 + c3*g3 + delta*d )
@constraint(despacho, g1 - f12 - f13 >= 0)
@constraint(despacho, g2 + f12 - f23 >= 0)
@constraint(despacho, g3 + f13 + f23 >= 15 - d)

#print(despacho)
status = solve(despacho)

println("Valor objetivo: ", getobjectivevalue(despacho))
println("g1 = ", getvalue(g1))
println("g2 = ", getvalue(g2))
println("g3 = ", getvalue(g3))
println("déficit = ", getvalue(d))
